{"ts":1366269369837,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var Stream = require('stream').Stream;\r\nvar inherits = require('util').inherits;\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar spawn = require('child_process').spawn;\r\n\r\n// tidy exit codes\r\nvar TIDY_OK = 0;\r\nvar TIDY_WARN = 1;\r\nvar TIDY_ERR = 2;\r\n\r\n// default tidy opts\r\nvar DEFAULT_OPTS = {\r\n  showWarnings: true,\r\n  tidyMark: false,\r\n  forceOutput: true,\r\n  quiet: false\r\n};\r\n\r\n// choose suitable executable\r\nvar tidyExec = chooseExec();\r\n\r\nfunction TidyWorker(opts) {\r\n  Stream.call(this);\r\n  \r\n  // Store a reference to the merged options for consumption by error reporting logic\r\n  var mergedOpts = merge(opts, DEFAULT_OPTS);\r\n  \r\n  this.writable= true;\r\n  this.readable= true;\r\n  this._worker = spawn(tidyExec, parseOpts(mergedOpts));\r\n  var self = this;\r\n  var errors = '';\r\n  this._worker.stdin.on('drain', function () {\r\n    self.emit('drain');\r\n  });\r\n  this._worker.stdin.on('error', function () {\r\n    self.emit('error');\r\n  });\r\n  this._worker.stdout.on('data', function (data) {\r\n    self.emit('data', data);\r\n  });\r\n  this._worker.stdout.on('close', function (data) {\r\n    self.emit('close');\r\n  });\r\n  this._worker.stderr.on('data', function (data) {\r\n    errors+= data;\r\n  });\r\n  this._worker.on('exit', function (code) {\r\n    switch(code){\r\n      // If there were any warnings or errors from Tiny command\r\n      case TIDY_WARN:\r\n        // The user asks to see warnings.\r\n        if(mergedOpts.showWarnings){\r\n          self.emit('error', errors);\r\n        }\r\n        break;\r\n      case TIDY_ERR:\r\n        // The user asks to see errors.\r\n        if(mergedOpts.showErrors){\r\n          self.emit('error', errors);\r\n        }\r\n        break;\r\n    }\r\n    \r\n    self.emit('end');\r\n    \r\n  });\r\n}\r\n\r\ninherits(TidyWorker, Stream);\r\n\r\nTidyWorker.prototype.write = function (data) {\r\n  if (!this._worker)\r\n    throw new Error('worker has been destroyed');\r\n  return this._worker.stdin.write(data);\r\n}\r\n\r\nTidyWorker.prototype.end = function (data) {\r\n  if (!this._worker)\r\n    throw new Error('worker has been destroyed');\r\n  this._worker.stdin.end(data);\r\n}\r\n\r\nTidyWorker.prototype.pause  = function () {\r\n  if (!this._worker)\r\n    throw new Error('worker has been destroyed');\r\n  if (this._worker.stdout.pause)\r\n    this._worker.stdout.pause();\r\n}\r\n\r\nTidyWorker.prototype.resume  = function () {\r\n  if (!this._worker)\r\n    throw new Error('worker has been destroyed');\r\n  if (this._worker.stdout.resume)\r\n    this._worker.stdout.resume();\r\n}\r\n\r\nTidyWorker.prototype.destroy = function () {\r\n  if (this._worker)\r\n    return;\r\n  this._worker.kill();\r\n  this._worker= null;\r\n  self.emit('close');\r\n}\r\n\r\nfunction createWorker(opts) {\r\n  return new TidyWorker(opts);\r\n}\r\n\r\nfunction tidy(text, opts, cb) {\r\n  // options are optional\r\n  if (typeof opts == 'function') {\r\n    cb = opts;\r\n    opts = {};\r\n  }\r\n  if (typeof cb != 'function')\r\n    throw new Error('no callback provided for tidy');\r\n\r\n  var tidy = new TidyWorker(opts);\r\n  var result = '';\r\n  var error = '';\r\n  tidy.on('data', function (data) {\r\n    result+= data;\r\n  });\r\n  tidy.on('error', function (data) {\r\n    error+= data;\r\n  });\r\n  tidy.on('end', function (code) {\r\n    cb(error, result);\r\n  });\r\n  tidy.end(text);\r\n}\r\n\r\nfunction chooseExec() {\r\n  var tidyExe;\r\n  switch (process.platform) {\r\n    case 'win32':\r\n      tidyExe = path.join('win32','tidy.exe');\r\n      break;\r\n    case 'linux':\r\n      tidyExe = path.join('linux', 'tidy');\r\n      break;\r\n  \tcase 'darwin':\r\n\t    tidyExe = path.join('darwin', 'tidy');\r\n\t    break;\r\n    default:\r\n        throw new Error('unsupported execution platform');\r\n  }\r\n  tidyExe = path.join(__dirname, 'bin', tidyExe);\r\n\r\n  var existsSync = fs.existsSync||path.existsSync; // node > 0.6\r\n  if (!existsSync(tidyExe))\r\n      throw new Error('missing tidy executable: ' + tidyExe);\r\n  return tidyExe;\r\n}\r\n\r\nfunction parseOpts(opts) {\r\n  opts = opts || {};\r\n  var args = [];\r\n  for (var n in opts) {\r\n    args.push('--' + toHyphens(n));\r\n    switch (typeof opts[n]) {\r\n      case 'string':\r\n      case 'number':\r\n        args.push(opts[n]);\r\n        break;\r\n      case 'boolean':\r\n        args.push(opts[n]? 'yes': 'no');\r\n        break;\r\n      default:\r\n        throw new Error('unknown option type');\r\n    }\r\n  }\r\n  return args;\r\n}\r\n\r\nfunction toHyphens(str) {\r\n    return str.replace(/([A-Z])/g, function (m, w) { return '-' + w; });\r\n}\r\n\r\n/**\r\n * Overwrites obj2's values with obj1's and adds obj2's if non existent in obj2\r\n * @param obj1\r\n * @param obj2\r\n * @returns a new object based on obj1 and obj2\r\n */\r\nfunction merge(obj1, obj2) {\r\n  obj1 = obj1 || {};\r\n  obj2 = obj2 || {};\r\n  var obj3 = {};\r\n  for (var attrname in obj2) obj3[attrname] = obj2[attrname];\r\n  for (var attrname in obj1) obj3[attrname] = obj1[attrname];\r\n  return obj3;\r\n}\r\n\r\nexports.createWorker = createWorker;\r\nexports.tidy = tidy;\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4836}]],"length":4836}
{"contributors":[],"silentsave":false,"ts":1366269489302,"patch":[[{"diffs":[[0,".write(data);\r\n}"],[-1,""],[0,""],[1,";"],[0,"\r\n\r\nTidyWorker.p"]],"start1":1907,"start2":1907,"length1":32,"length2":33},{"diffs":[[0,"nd(data);\r\n}"],[-1,""],[0,""],[1,";"],[0,"\r\n\r\nTidyWork"]],"start1":2069,"start2":2069,"length1":24,"length2":25},{"diffs":[[0,".pause();\r\n}"],[-1,""],[0,""],[1,";"],[0,"\r\n\r\nTidyWork"]],"start1":2261,"start2":2261,"length1":24,"length2":25},{"diffs":[[0,"resume();\r\n}"],[-1,""],[0,""],[1,";"],[0,"\r\n\r\nTidyWork"]],"start1":2456,"start2":2456,"length1":24,"length2":25},{"diffs":[[0,"ull;\r\n  "],[-1,"self"],[1,"this"],[0,".emit('c"]],"start1":2594,"start2":2594,"length1":20,"length2":20},{"diffs":[[0,"'close');\r\n}"],[1,";"],[0,"\r\n\r\nfunction"]],"start1":2612,"start2":2612,"length1":24,"length2":25},{"diffs":[[0,"\r\n  var "],[-1,"tidy"],[1,"worker"],[0," = new T"]],"start1":2917,"start2":2917,"length1":20,"length2":22},{"diffs":[[0,"or = '';\r\n  "],[-1,"tidy"],[1,"worker"],[0,".on('data', "]],"start1":2986,"start2":2986,"length1":28,"length2":30},{"diffs":[[0,";\r\n  });\r\n  "],[-1,"tidy"],[1,"worker"],[0,".on('error',"]],"start1":3052,"start2":3052,"length1":28,"length2":30},{"diffs":[[0," });\r\n  "],[-1,"tidy"],[1,"worker"],[0,".on('end"]],"start1":3122,"start2":3122,"length1":20,"length2":22},{"diffs":[[0," });\r\n  "],[-1,"tidy"],[1,"worker"],[0,".end(tex"]],"start1":3191,"start2":3191,"length1":20,"length2":22},{"diffs":[[0,"eak;\r\n  "],[-1,"\t"],[1,"  "],[0,"case 'da"]],"start1":3448,"start2":3448,"length1":17,"length2":18},{"diffs":[[0,"rwin':\r\n"],[-1,"\t"],[1,"  "],[0,"    tidy"]],"start1":3466,"start2":3466,"length1":17,"length2":18},{"diffs":[[0,");\r\n"],[-1,"\t"],[1,"  "],[0,"    "]],"start1":3516,"start2":3516,"length1":9,"length2":10}]],"length":4854,"saved":false}
{"ts":1366269528008,"patch":[[{"diffs":[[0,"var attrname"],[1,"2"],[0," in obj1) ob"]],"start1":4717,"start2":4717,"length1":24,"length2":25},{"diffs":[[0,"bj3[attrname"],[1,"2"],[0,"] = obj1[att"]],"start1":4741,"start2":4741,"length1":24,"length2":25},{"diffs":[[0,"bj1[attrname"],[1,"2"],[0,"];\r\n  return"]],"start1":4759,"start2":4759,"length1":24,"length2":25}]],"length":4857,"saved":false}
{"ts":1366269663317,"patch":[[{"diffs":[[0,"rnings: "],[-1,"tru"],[1,"fals"],[0,"e,\r\n  ti"]],"start1":314,"start2":314,"length1":19,"length2":20}]],"length":4858,"saved":false}
